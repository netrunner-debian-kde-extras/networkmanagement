#!/usr/bin/perl -w

=head1 NAME

dh_auto_configure - automatically configure a package prior to building

=cut

use strict;
use Debian::Debhelper::Dh_Lib;
use Debian::Debhelper::Dh_Plugins;

=head1 SYNOPSIS

B<dh_auto_configure> [B<-O>] [S<I<debhelper options>>] [S<B<--> I<params>>]

=head1 DESCRIPTION

dh_auto_configure is a debhelper program that tries to automatically
configure a package prior to building. It looks for and runs a ./configure
script, Makefile.PL, Build.PL, or cmake. A standard set of parameters is
determined and passed to the program that is run. If no program to run is
found, dh_auto_configure will exit without doing anything.

This is intended to work for about 90% of packages. If it doesn't work,
you're encouraged to skip using dh_auto_configure at all, and just run
./configure or its equivalent manually.

=head1 OPTIONS

=over 4

=item B<-O>, B<--out-of-source-tree>

Configure the package to be built outside the source tree when supported by
the underlying buildsystem and debhelper. This option is known to work with
autotools based buildsystems. It is default for the CMake buildsystem. The build
directory will be the subdirectory of the package source tree named as
"obj-`dpkg-architecture -qDEB_BUILD_GNU_TYPE`".

=item B<--> I<params>

Pass "params" to the program that is run. These can be used to supplement
or override the standard parameters that dh_auto_configure passes.

=back

=cut

my $opt_out_of_source_tree = 0;

init(options => {
    "out-of-source-tree|O!" => \$opt_out_of_source_tree,
});

my $plugin = Debian::Debhelper::Dh_Plugins::find_buildsystem_plugin("configure");
if ($plugin) {
	if (exists $plugin->FEATURES()->{'out-of-source-tree'} &&
	           $opt_out_of_source_tree) {
		$plugin->build_out_of_source_tree(1);
	}
	$plugin->configure();
}

=head1 SEE ALSO

L<debhelper(7)>

This program is a part of debhelper.

=head1 AUTHOR

Joey Hess <joeyh@debian.org>

=cut
